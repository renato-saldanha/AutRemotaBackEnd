"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _transaction = _interopRequireDefault(require("knex/lib/execution/transaction"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var debug = require("debug")("knex:tx");

var Transaction_Firebird = /*#__PURE__*/function (_Transaction) {
  (0, _inherits2["default"])(Transaction_Firebird, _Transaction);

  var _super = _createSuper(Transaction_Firebird);

  function Transaction_Firebird() {
    (0, _classCallCheck2["default"])(this, Transaction_Firebird);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(Transaction_Firebird, [{
    key: "begin",
    value: function begin(conn) {
      var _this = this;

      return new Promise(function (resolve, reject) {
        conn.transaction(_this.client.driver.ISOLATION_READ_COMMITED, function (error, transaction) {
          if (error) return reject(error);
          conn._transaction = transaction;
          resolve();
        });
      });
    }
  }, {
    key: "savepoint",
    value: function savepoint() {
      throw new Error("savepoints not implemented");
    }
  }, {
    key: "commit",
    value: function commit(conn, value) {
      return this.query(conn, "commit", 1, value);
    }
  }, {
    key: "release",
    value: function release() {
      throw new Error("releasing savepoints not implemented");
    }
  }, {
    key: "rollback",
    value: function rollback(conn, error) {
      return this.query(conn, "rollback", 2, error);
    }
  }, {
    key: "rollbackTo",
    value: function rollbackTo() {
      throw new Error("rolling back to savepoints not implemented");
    }
  }, {
    key: "query",
    value: function query(conn, method, status, value) {
      var _this2 = this;

      var q = new Promise(function (resolve, reject) {
        var transaction = conn._transaction;
        transaction[method](function (error) {
          delete conn._transaction;
          if (error) return reject(error);
          resolve();
        });
      })["catch"](function (error) {
        status = 2;
        value = error;
        _this2._completed = true;
        debug("%s error running transaction query", _this2.txid);
      }).then(function () {
        if (status === 1) _this2._resolver(value);
        if (status === 2) _this2._rejecter(value);
      });

      if (status === 1 || status === 2) {
        this._completed = true;
      }

      return q;
    }
  }]);
  return Transaction_Firebird;
}(_transaction["default"]);

var _default = Transaction_Firebird;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90cmFuc2FjdGlvbi5qcyJdLCJuYW1lcyI6WyJkZWJ1ZyIsInJlcXVpcmUiLCJUcmFuc2FjdGlvbl9GaXJlYmlyZCIsImNvbm4iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRyYW5zYWN0aW9uIiwiY2xpZW50IiwiZHJpdmVyIiwiSVNPTEFUSU9OX1JFQURfQ09NTUlURUQiLCJlcnJvciIsIl90cmFuc2FjdGlvbiIsIkVycm9yIiwidmFsdWUiLCJxdWVyeSIsIm1ldGhvZCIsInN0YXR1cyIsInEiLCJfY29tcGxldGVkIiwidHhpZCIsInRoZW4iLCJfcmVzb2x2ZXIiLCJfcmVqZWN0ZXIiLCJUcmFuc2FjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBOzs7Ozs7QUFEQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQVAsQ0FBaUIsU0FBakIsQ0FBZDs7SUFHTUMsb0I7Ozs7Ozs7Ozs7OztXQUNKLGVBQU1DLElBQU4sRUFBWTtBQUFBOztBQUNWLGFBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN0Q0gsUUFBQUEsSUFBSSxDQUFDSSxXQUFMLENBQ0UsS0FBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLHVCQURyQixFQUVFLFVBQUNDLEtBQUQsRUFBUUosV0FBUixFQUF3QjtBQUN0QixjQUFJSSxLQUFKLEVBQVcsT0FBT0wsTUFBTSxDQUFDSyxLQUFELENBQWI7QUFDWFIsVUFBQUEsSUFBSSxDQUFDUyxZQUFMLEdBQW9CTCxXQUFwQjtBQUNBRixVQUFBQSxPQUFPO0FBQ1IsU0FOSDtBQVFELE9BVE0sQ0FBUDtBQVVEOzs7V0FFRCxxQkFBWTtBQUNWLFlBQU0sSUFBSVEsS0FBSixDQUFVLDRCQUFWLENBQU47QUFDRDs7O1dBRUQsZ0JBQU9WLElBQVAsRUFBYVcsS0FBYixFQUFvQjtBQUNsQixhQUFPLEtBQUtDLEtBQUwsQ0FBV1osSUFBWCxFQUFpQixRQUFqQixFQUEyQixDQUEzQixFQUE4QlcsS0FBOUIsQ0FBUDtBQUNEOzs7V0FFRCxtQkFBVTtBQUNSLFlBQU0sSUFBSUQsS0FBSixDQUFVLHNDQUFWLENBQU47QUFDRDs7O1dBRUQsa0JBQVNWLElBQVQsRUFBZVEsS0FBZixFQUFzQjtBQUNwQixhQUFPLEtBQUtJLEtBQUwsQ0FBV1osSUFBWCxFQUFpQixVQUFqQixFQUE2QixDQUE3QixFQUFnQ1EsS0FBaEMsQ0FBUDtBQUNEOzs7V0FFRCxzQkFBYTtBQUNYLFlBQU0sSUFBSUUsS0FBSixDQUFVLDRDQUFWLENBQU47QUFDRDs7O1dBRUQsZUFBTVYsSUFBTixFQUFZYSxNQUFaLEVBQW9CQyxNQUFwQixFQUE0QkgsS0FBNUIsRUFBbUM7QUFBQTs7QUFDakMsVUFBTUksQ0FBQyxHQUFHLElBQUlkLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDekMsWUFBTUMsV0FBVyxHQUFHSixJQUFJLENBQUNTLFlBQXpCO0FBQ0FMLFFBQUFBLFdBQVcsQ0FBQ1MsTUFBRCxDQUFYLENBQW9CLFVBQUNMLEtBQUQsRUFBVztBQUM3QixpQkFBT1IsSUFBSSxDQUFDUyxZQUFaO0FBQ0EsY0FBSUQsS0FBSixFQUFXLE9BQU9MLE1BQU0sQ0FBQ0ssS0FBRCxDQUFiO0FBQ1hOLFVBQUFBLE9BQU87QUFDUixTQUpEO0FBS0QsT0FQUyxXQVFELFVBQUNNLEtBQUQsRUFBVztBQUNoQk0sUUFBQUEsTUFBTSxHQUFHLENBQVQ7QUFDQUgsUUFBQUEsS0FBSyxHQUFHSCxLQUFSO0FBQ0EsUUFBQSxNQUFJLENBQUNRLFVBQUwsR0FBa0IsSUFBbEI7QUFDQW5CLFFBQUFBLEtBQUssQ0FBQyxvQ0FBRCxFQUF1QyxNQUFJLENBQUNvQixJQUE1QyxDQUFMO0FBQ0QsT0FiTyxFQWNQQyxJQWRPLENBY0YsWUFBTTtBQUNWLFlBQUlKLE1BQU0sS0FBSyxDQUFmLEVBQWtCLE1BQUksQ0FBQ0ssU0FBTCxDQUFlUixLQUFmO0FBQ2xCLFlBQUlHLE1BQU0sS0FBSyxDQUFmLEVBQWtCLE1BQUksQ0FBQ00sU0FBTCxDQUFlVCxLQUFmO0FBQ25CLE9BakJPLENBQVY7O0FBa0JBLFVBQUlHLE1BQU0sS0FBSyxDQUFYLElBQWdCQSxNQUFNLEtBQUssQ0FBL0IsRUFBa0M7QUFDaEMsYUFBS0UsVUFBTCxHQUFrQixJQUFsQjtBQUNEOztBQUNELGFBQU9ELENBQVA7QUFDRDs7O0VBekRnQ00sdUI7O2VBNERwQnRCLG9CIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVidWcgPSByZXF1aXJlKFwiZGVidWdcIikoXCJrbmV4OnR4XCIpO1xuaW1wb3J0IFRyYW5zYWN0aW9uIGZyb20gXCJrbmV4L2xpYi9leGVjdXRpb24vdHJhbnNhY3Rpb25cIjtcblxuY2xhc3MgVHJhbnNhY3Rpb25fRmlyZWJpcmQgZXh0ZW5kcyBUcmFuc2FjdGlvbiB7XG4gIGJlZ2luKGNvbm4pIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubi50cmFuc2FjdGlvbihcbiAgICAgICAgdGhpcy5jbGllbnQuZHJpdmVyLklTT0xBVElPTl9SRUFEX0NPTU1JVEVELFxuICAgICAgICAoZXJyb3IsIHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICBjb25uLl90cmFuc2FjdGlvbiA9IHRyYW5zYWN0aW9uO1xuICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNhdmVwb2ludCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJzYXZlcG9pbnRzIG5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgfVxuXG4gIGNvbW1pdChjb25uLCB2YWx1ZSkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5KGNvbm4sIFwiY29tbWl0XCIsIDEsIHZhbHVlKTtcbiAgfVxuXG4gIHJlbGVhc2UoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwicmVsZWFzaW5nIHNhdmVwb2ludHMgbm90IGltcGxlbWVudGVkXCIpO1xuICB9XG5cbiAgcm9sbGJhY2soY29ubiwgZXJyb3IpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeShjb25uLCBcInJvbGxiYWNrXCIsIDIsIGVycm9yKTtcbiAgfVxuXG4gIHJvbGxiYWNrVG8oKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwicm9sbGluZyBiYWNrIHRvIHNhdmVwb2ludHMgbm90IGltcGxlbWVudGVkXCIpO1xuICB9XG5cbiAgcXVlcnkoY29ubiwgbWV0aG9kLCBzdGF0dXMsIHZhbHVlKSB7XG4gICAgY29uc3QgcSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gY29ubi5fdHJhbnNhY3Rpb247XG4gICAgICB0cmFuc2FjdGlvblttZXRob2RdKChlcnJvcikgPT4ge1xuICAgICAgICBkZWxldGUgY29ubi5fdHJhbnNhY3Rpb247XG4gICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIHN0YXR1cyA9IDI7XG4gICAgICAgIHZhbHVlID0gZXJyb3I7XG4gICAgICAgIHRoaXMuX2NvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgIGRlYnVnKFwiJXMgZXJyb3IgcnVubmluZyB0cmFuc2FjdGlvbiBxdWVyeVwiLCB0aGlzLnR4aWQpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMSkgdGhpcy5fcmVzb2x2ZXIodmFsdWUpO1xuICAgICAgICBpZiAoc3RhdHVzID09PSAyKSB0aGlzLl9yZWplY3Rlcih2YWx1ZSk7XG4gICAgICB9KTtcbiAgICBpZiAoc3RhdHVzID09PSAxIHx8IHN0YXR1cyA9PT0gMikge1xuICAgICAgdGhpcy5fY29tcGxldGVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHE7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVHJhbnNhY3Rpb25fRmlyZWJpcmQ7XG4iXX0=