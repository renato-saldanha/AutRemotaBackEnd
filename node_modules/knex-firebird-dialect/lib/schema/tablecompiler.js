"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _tablecompiler = _interopRequireDefault(require("knex/lib/schema/tablecompiler"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

// Table Compiler
// -------
var TableCompiler_Firebird = /*#__PURE__*/function (_TableCompiler) {
  (0, _inherits2["default"])(TableCompiler_Firebird, _TableCompiler);

  var _super = _createSuper(TableCompiler_Firebird);

  function TableCompiler_Firebird() {
    (0, _classCallCheck2["default"])(this, TableCompiler_Firebird);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(TableCompiler_Firebird, [{
    key: "createQuery",
    value: // Create a new table.
    function createQuery(columns, ifNot) {
      if (ifNot) throw new Error("createQuery ifNot not implemented");
      var createStatement = "create table ";
      var sql = createStatement + this.tableName() + " (" + columns.sql.join(", ") + ")";
      this.pushQuery(sql);
    } // Compile a plain index key command.

  }, {
    key: "index",
    value: function index(columns, indexName) {
      indexName = indexName ? this.formatter.wrap(indexName) : this._indexCommand("index", this.tableNameRaw, columns);
      this.pushQuery("create index ".concat(indexName, " on ").concat(this.tableName(), " (").concat(this.formatter.columnize(columns), ")"));
    } //TableCompiler_Firebird.prototype.foreign =

  }, {
    key: "primary",
    value: function primary() {
      this.constraintName = this.constraintName ? this.formatter.wrap(this.constraintName) : this.formatter.wrap("".concat(this.tableNameRaw, "_pkey"));
      this.pushQuery("alter table ".concat(this.tableName(), " add constraint ").concat(this.constraintName, " primary key (").concat(this.formatter.columnize(columns), ")"));
    }
  }]);
  return TableCompiler_Firebird;
}(_tablecompiler["default"]);

var _default = TableCompiler_Firebird;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2hlbWEvdGFibGVjb21waWxlci5qcyJdLCJuYW1lcyI6WyJUYWJsZUNvbXBpbGVyX0ZpcmViaXJkIiwiY29sdW1ucyIsImlmTm90IiwiRXJyb3IiLCJjcmVhdGVTdGF0ZW1lbnQiLCJzcWwiLCJ0YWJsZU5hbWUiLCJqb2luIiwicHVzaFF1ZXJ5IiwiaW5kZXhOYW1lIiwiZm9ybWF0dGVyIiwid3JhcCIsIl9pbmRleENvbW1hbmQiLCJ0YWJsZU5hbWVSYXciLCJjb2x1bW5pemUiLCJjb25zdHJhaW50TmFtZSIsIlRhYmxlQ29tcGlsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBRUE7QUFDQTtJQUVNQSxzQjs7Ozs7Ozs7Ozs7O1dBQ0o7QUFDQSx5QkFBWUMsT0FBWixFQUFxQkMsS0FBckIsRUFBNEI7QUFDMUIsVUFBSUEsS0FBSixFQUFXLE1BQU0sSUFBSUMsS0FBSixDQUFVLG1DQUFWLENBQU47QUFDWCxVQUFNQyxlQUFlLEdBQUcsZUFBeEI7QUFDQSxVQUFJQyxHQUFHLEdBQ0xELGVBQWUsR0FBRyxLQUFLRSxTQUFMLEVBQWxCLEdBQXFDLElBQXJDLEdBQTRDTCxPQUFPLENBQUNJLEdBQVIsQ0FBWUUsSUFBWixDQUFpQixJQUFqQixDQUE1QyxHQUFxRSxHQUR2RTtBQUVBLFdBQUtDLFNBQUwsQ0FBZUgsR0FBZjtBQUNELEssQ0FFRDs7OztXQUNBLGVBQU1KLE9BQU4sRUFBZVEsU0FBZixFQUEwQjtBQUN4QkEsTUFBQUEsU0FBUyxHQUFHQSxTQUFTLEdBQ2pCLEtBQUtDLFNBQUwsQ0FBZUMsSUFBZixDQUFvQkYsU0FBcEIsQ0FEaUIsR0FFakIsS0FBS0csYUFBTCxDQUFtQixPQUFuQixFQUE0QixLQUFLQyxZQUFqQyxFQUErQ1osT0FBL0MsQ0FGSjtBQUdBLFdBQUtPLFNBQUwsd0JBQ2tCQyxTQURsQixpQkFDa0MsS0FBS0gsU0FBTCxFQURsQyxlQUN1RCxLQUFLSSxTQUFMLENBQWVJLFNBQWYsQ0FDbkRiLE9BRG1ELENBRHZEO0FBS0QsSyxDQUVEOzs7O1dBQ0EsbUJBQVU7QUFDUixXQUFLYyxjQUFMLEdBQXNCLEtBQUtBLGNBQUwsR0FDbEIsS0FBS0wsU0FBTCxDQUFlQyxJQUFmLENBQW9CLEtBQUtJLGNBQXpCLENBRGtCLEdBRWxCLEtBQUtMLFNBQUwsQ0FBZUMsSUFBZixXQUF1QixLQUFLRSxZQUE1QixXQUZKO0FBR0EsV0FBS0wsU0FBTCx1QkFDaUIsS0FBS0YsU0FBTCxFQURqQiw2QkFFSSxLQUFLUyxjQUZULDJCQUdtQixLQUFLTCxTQUFMLENBQWVJLFNBQWYsQ0FBeUJiLE9BQXpCLENBSG5CO0FBS0Q7OztFQWhDa0NlLHlCOztlQW1DdEJoQixzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUYWJsZUNvbXBpbGVyIGZyb20gXCJrbmV4L2xpYi9zY2hlbWEvdGFibGVjb21waWxlclwiO1xuXG4vLyBUYWJsZSBDb21waWxlclxuLy8gLS0tLS0tLVxuXG5jbGFzcyBUYWJsZUNvbXBpbGVyX0ZpcmViaXJkIGV4dGVuZHMgVGFibGVDb21waWxlciB7XG4gIC8vIENyZWF0ZSBhIG5ldyB0YWJsZS5cbiAgY3JlYXRlUXVlcnkoY29sdW1ucywgaWZOb3QpIHtcbiAgICBpZiAoaWZOb3QpIHRocm93IG5ldyBFcnJvcihcImNyZWF0ZVF1ZXJ5IGlmTm90IG5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICBjb25zdCBjcmVhdGVTdGF0ZW1lbnQgPSBcImNyZWF0ZSB0YWJsZSBcIjtcbiAgICBsZXQgc3FsID1cbiAgICAgIGNyZWF0ZVN0YXRlbWVudCArIHRoaXMudGFibGVOYW1lKCkgKyBcIiAoXCIgKyBjb2x1bW5zLnNxbC5qb2luKFwiLCBcIikgKyBcIilcIjtcbiAgICB0aGlzLnB1c2hRdWVyeShzcWwpO1xuICB9XG5cbiAgLy8gQ29tcGlsZSBhIHBsYWluIGluZGV4IGtleSBjb21tYW5kLlxuICBpbmRleChjb2x1bW5zLCBpbmRleE5hbWUpIHtcbiAgICBpbmRleE5hbWUgPSBpbmRleE5hbWVcbiAgICAgID8gdGhpcy5mb3JtYXR0ZXIud3JhcChpbmRleE5hbWUpXG4gICAgICA6IHRoaXMuX2luZGV4Q29tbWFuZChcImluZGV4XCIsIHRoaXMudGFibGVOYW1lUmF3LCBjb2x1bW5zKTtcbiAgICB0aGlzLnB1c2hRdWVyeShcbiAgICAgIGBjcmVhdGUgaW5kZXggJHtpbmRleE5hbWV9IG9uICR7dGhpcy50YWJsZU5hbWUoKX0gKCR7dGhpcy5mb3JtYXR0ZXIuY29sdW1uaXplKFxuICAgICAgICBjb2x1bW5zXG4gICAgICApfSlgXG4gICAgKTtcbiAgfVxuXG4gIC8vVGFibGVDb21waWxlcl9GaXJlYmlyZC5wcm90b3R5cGUuZm9yZWlnbiA9XG4gIHByaW1hcnkoKSB7XG4gICAgdGhpcy5jb25zdHJhaW50TmFtZSA9IHRoaXMuY29uc3RyYWludE5hbWVcbiAgICAgID8gdGhpcy5mb3JtYXR0ZXIud3JhcCh0aGlzLmNvbnN0cmFpbnROYW1lKVxuICAgICAgOiB0aGlzLmZvcm1hdHRlci53cmFwKGAke3RoaXMudGFibGVOYW1lUmF3fV9wa2V5YCk7XG4gICAgdGhpcy5wdXNoUXVlcnkoXG4gICAgICBgYWx0ZXIgdGFibGUgJHt0aGlzLnRhYmxlTmFtZSgpfSBhZGQgY29uc3RyYWludCAke1xuICAgICAgICB0aGlzLmNvbnN0cmFpbnROYW1lXG4gICAgICB9IHByaW1hcnkga2V5ICgke3RoaXMuZm9ybWF0dGVyLmNvbHVtbml6ZShjb2x1bW5zKX0pYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVDb21waWxlcl9GaXJlYmlyZDtcbiJdfQ==